{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoagin","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","note","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","response","ok","json","cloudResp","secure_url","activeNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","saveNote","doc","update","refresNotes","Swal","fire","title","startLoginEMailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","event","preventDefault","placeholder","autoComplete","onChange","disable","onClick","signInWithPopup","src","alt","to","RegisterScreen","messageError","password2","isFormValid","trim","length","validator","isEmail","e","createUserWithEmailAndPassword","updateProfile","registerUserByNameEmailPassword","AuthRouter","exact","path","component","JournalEntry","noteDate","moment","date","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","toDateString","add","docRef","NotesAppBar","active","display","files","fileUrl","console","log","startUpLoading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","cheking","setcheking","isLoggedIn","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d8630187.chunk.js","sourcesContent":["import firebase from 'firebase/app'; \nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC2g2i4E5dE52jVQqH9G65AuKEJyGIw85E\",\n    authDomain: \"journalapp-9c518.firebaseapp.com\",\n    databaseURL: \"https://journalapp-9c518-default-rtdb.firebaseio.com\",\n    projectId: \"journalapp-9c518\",\n    storageBucket: \"journalapp-9c518.appspot.com\",\n    messagingSenderId: \"1024210156963\",\n    appId: \"1:1024210156963:web:e94ac1ef3d8a275adaae16\",\n    measurementId: \"G-N8RZ9SN5WD\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\n  //base de datos\n  const db = firebase.firestore();\n  // conectarse a la manera de la autenticacion de Google\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = ( newFormState = initialState ) => {\n    setValues(newFormState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  uiSetError: \"[UI] Set error\",\n  uiRemoveError: \"[UI] Remove error\",\n\n  uiStartLoading: \"[UI] Start loading\",\n  uiFinishLoading: \"[UI] Finish loading\",\n\n  notesAddEntry: \"[Notes] New note\",\n  notesActiveEntry: \"[Notes] Set active note\",\n  notesLoadEntrys: \"[Notes] Load notes\",\n  notesUpdateEntry: \"[Notes] Update note\",\n  notesFileUrl: \"[Notes] Update image url\",\n  notesDeleteNote: \"[Notes] Delete note\",\n  notesLogoutCleaning: \"[Notes] Logout cleaning\",\n};\n","import { types } from \"../types/types\";\n\nexport const setError = (err) => ({\n  type: types.uiSetError,\n  payload: err,\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n  type: types.uiStartLoading,\n});\n\nexport const finishLoagin = () => ({\n  type: types.uiFinishLoading,\n});\n","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n  const notes = [];\r\n\r\n  notesSnap.forEach((note) => {\r\n    notes.push({\r\n      id: note.id,\r\n      ...note.data(),\r\n    });\r\n  });\r\n\r\n  return notes;\r\n};\r\n","\r\n\r\nexport const fileUpload = async (file) => {\r\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/davleem9s/upload\";\r\n  const formData = new FormData();\r\n  formData.append(\"upload_preset\", \"react-journal\");\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n      const response = await fetch(cloudUrl, {\r\n          method:'POST',\r\n          body: formData\r\n      });\r\n\r\n      if(response.ok){\r\n        const cloudResp = await response.json();\r\n        return cloudResp.secure_url;\r\n      }else{\r\n          throw await response.json();\r\n      }\r\n      \r\n  } catch (error) {\r\n       throw error\r\n  }\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n// https://api.cloudinary.com/v1_1/davleem9s\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n\r\n    const newNote = {\r\n      title: \"Some awesome title\",\r\n      body: \"Some awesome body\",\r\n      date: new Date().toDateString(),\r\n    };\r\n    // metodo add devuelve una promesa y resuelve el document reference\r\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    dispatch(activeNote(docRef.id, newNote));\r\n    dispatch(startLoadingNotes(uid));\r\n  };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n  type: types.notesActiveEntry,\r\n  payload: {\r\n    id,\r\n    ...note,\r\n  },\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    // se obtienen los datos de las notas\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  };\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n  type: types.notesLoadEntrys,\r\n  payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n\r\n    if(!note.url){\r\n      delete note.url;\r\n    }\r\n\r\n    const saveNote = { ...note };\r\n    delete saveNote.id;\r\n\r\n    // metodo guardar en la base de datos\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(saveNote);\r\n    // vuelve a cargar las notas\r\n    // carga inicial solamente dispatch(startLoadingNotes(uid));\r\n    dispatch(refresNotes(note.id, note));\r\n    Swal.fire('Save', note.title, 'success')\r\n  };\r\n};\r\n\r\nexport const refresNotes = (id, note) => ({\r\n  type: types.notesUpdateEntry,\r\n  payload: {\r\n    id,\r\n    note,\r\n  },\r\n});\r\n\r\nexport const startUpLoading =  (file) =>{\r\n  return async (dispatch, getState) => {\r\n    \r\n    const {active} = getState().notes;\r\n\r\n    const fileUrl = await fileUpload(file);\r\n\r\n    const newNote = {\r\n      ...active,\r\n      url:  fileUrl\r\n    };\r\n\r\n    dispatch(startSaveNote(newNote));\r\n\r\n    console.log(fileUrl)\r\n\r\n  };\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n\r\n  return async (dispatch, getState) =>{\r\n    const uid = getState().auth.uid;\r\n\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n    dispatch(startLoadingNotes(uid));\r\n    dispatch(activeNote(id, null));\r\n    Swal.fire('Delete', 'Nota', 'success')\r\n  }\r\n}\r\n\r\nexport const noteLogout = () =>({\r\ntype: types.notesLogoutCleaning\r\n})\r\n","import { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\nimport { finishLoagin, startLoading } from \"./ui\";\nimport Swal from 'sweetalert2'\nimport { noteLogout } from \"./notes\";\n\n// action que registrará un nuevo usuario en la base de datos con firebase\nexport const registerUserByNameEmailPassword = (name, email, password) => {\n  //tarea asincrona porque va a ir a registrar al firebase\n  // se retornará un callback\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((err) => {\n        Swal.fire(\"Error in authentication\", err.message,'error')\n      });\n  };\n};\n// action de login con firebase\nexport const startLoginEMailPassword = (email, password) => {\n  //action asincrona, devuelve un callback\n  // el middleware va a ejecutar el callback cuando haga el llamado a la action\n  // cuando ejecute el fetch se ejecuta el dispatch\n  return (dispatch) => {\n    dispatch(startLoading());\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoagin());\n      })\n      .catch((err) => {\n        dispatch(finishLoagin());\n        Swal.fire(\"Error in authentication\", err.message,'error')\n      });\n  };\n};\n\n// actions para la autenticacion con Google\nexport const googleAuth = () => {\n  //tarea asincrona\n  return (dispatch) => {\n    //callback\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\n// actions para el dispatch de login con store\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid: uid,\n      displayName: displayName,\n    },\n  };\n};\n\n// action logout asincrona sin parametros\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n    dispatch(noteLogout());\n  };\n};\n\n// action que elimina el usuario y uid del store\nexport const logout = () => ({\n  type: types.logout,\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { googleAuth, startLoginEMailPassword } from \"../../actions/auth\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.ui);\n\n  const [formValues, handleInputChange, reset] = useForm({\n    email: \"maria@gmail.com\",\n    password: \"123456\",\n  });\n\n  const { email, password } = formValues;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(startLoginEMailPassword(email, password));\n    reset();\n  };\n\n  const handleGoogleAut = () => {\n    dispatch(googleAuth());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          name=\"email\"\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          className=\"auth__input\"\n          onChange={handleInputChange}\n        />\n\n        <button\n          disable={loading? 1 : 0}\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n        >\n          Login\n        </button>\n\n        <div className=\"auth__social-networks\">\n          <p>Login with social networks</p>\n\n          <div className=\"google-btn\" onClick={handleGoogleAut}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n\n        <Link to=\"/auth/register\" className=\"link\">\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport validator from \"validator\";\nimport { removeError, setError } from \"../../actions/ui\";\nimport { registerUserByNameEmailPassword } from \"../../actions/auth\";\n\nexport const RegisterScreen = () => {\n\n  const dispatch = useDispatch();\n  const { messageError } = useSelector(state => state.ui)\n\n  const [formValues, handleInputChange] = useForm({\n    name: \"Maria\",\n    email: \"maria@gmail.com\",\n    password: \"123456\",\n    password2: \"123456\",\n  });\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleSumit = (e) => {\n    //no propagacion del formulario por la url\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(registerUserByNameEmailPassword(name, email, password));\n    } \n  };\n\n  const isFormValid = () => {\n    if (name.trim().length <= 1) {\n      dispatch(setError(\"Name invalid\"))\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError(\"Email invalid\"))\n      return false;\n    } else if (password !== password2 || password.length < 5) {\n      dispatch(setError(\"Password invalid\"))\n      return false;\n    }\n    dispatch(removeError())\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Register</h3>\n\n      {\n        messageError &&\n        <div className=\"auth__alert-error\">{messageError}</div>\n      }\n\n      <form onSubmit={handleSumit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          className=\"auth__input\"\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          name=\"password2\"\n          value={password2}\n          className=\"auth__input\"\n          onChange={handleInputChange}\n        />\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\n          Register\n        </button>\n\n        <Link to=\"/auth/login\" className=\"link\">\n          Already registered?\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { activeNote } from \"../../actions/notes\";\n\nexport const JournalEntry = ({ note }) => {\n  const noteDate = moment(note.date);\n\n  const dispatch = useDispatch();\n\n  const handleEntryClick = (e) => {\n    e.preventDefault();\n    dispatch(activeNote(note.id, note));\n  };\n\n  return (\n    <div className=\"journal__entry pointer\" onClick={handleEntryClick}>\n      {note.url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${note.url})`,\n          }}\n        ></div>\n      )}\n\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">{note.title}</p>\n        <p className=\"journal__entry-content\">{note.body}</p>\n      </div>\n\n      <div className=\"journal__entry-date-box\">\n        <span>{noteDate.format(\"dddd\")}</span>\n        <h4>{noteDate.format(\"Do\")}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { JournalEntry } from \"./JournalEntry\";\n\nexport const JournalEntries = () => {\n  const { notes } = useSelector((state) => state.notes);\n\n  return (\n    <div className=\"journal__entries\">\n      {notes.map((note) => (\n        <JournalEntry key={note.id} note={note}/>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { startNewNote } from \"../../actions/notes\";\nimport { JournalEntries } from \"./JournalEntries\";\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(state => state.auth)\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(startLogout())\n  };\n\n  const handleAddEntry = () =>{\n    dispatch(startNewNote())\n  }\n\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span> {name}</span>\n        </h3>\n\n        <button onClick={handleLogout} className=\"btn\">\n          Logout\n        </button>\n      </div>\n\n      <div className=\"journal__new-entry\"\n          onClick={handleAddEntry}>\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className=\"mt-5\">New entry</p>\n      </div>\n\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUpLoading } from \"../../actions/notes\";\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active } = useSelector((state) => state.notes);\n\n  const handleSave = () => {\n    dispatch(startSaveNote(active));\n  };\n\n  const handlePicture = (e) => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n\n  const handleFileChange = (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUpLoading(file));\n    }\n  };\n\n  return (\n    <div className=\"notes__appbar\">\n      <span>{active.date}</span>\n\n      <input\n        id=\"fileSelector\"\n        type=\"file\"\n        style={{ display: \"none\" }}\n        onChange={handleFileChange}\n      />\n\n      <div>\n        <button className=\"btn\" onClick={handlePicture}>\n          Picture\n        </button>\n\n        <button className=\"btn\" onClick={handleSave}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activeNote, startDeleting } from \"../../actions/notes\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n\n  const { active: note } = useSelector((state) => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const { title, body } = formValues;\n\n  const activeId = useRef(note.id);\n\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n\n  useEffect(() => {\n    dispatch(\n      activeNote(formValues.id, {\n        ...formValues,\n      })\n    );\n  }, [formValues,dispatch]);\n\n  const handleDelete = (e) =>{\n    e.preventDefault();\n    dispatch(startDeleting(note.id))\n  }\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n\n      <div className=\"notes__content\">\n        <input\n          type=\"text\"\n          placeholder=\"Some awesome title\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n          name=\"title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n\n        <textarea\n          placeholder=\"What happened today\"\n          className=\"notes__textarea\"\n          name=\"body\"\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n\n        {note.url && (\n          <div className=\"notes__image\">\n            <img src={note.url} alt=\"imagen\" />\n          </div>\n        )}\n      </div>\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { NoteScreen } from \"../notes/NoteScreen\";\nimport { useSelector } from \"react-redux\";\nimport { NothingSelected } from \"./NothingSelected\";\n\nexport const JournalScreen = () => {\n  const { active } = useSelector((state) => state.notes);\n  return (\n    <div className=\"journal__main-content\">\n      <Sidebar />\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/journal\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { firebase } from \"../firebase/firebase-config\";\n\nimport { AuthRouter } from \"./AuthRouter\";\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { startLoadingNotes } from \"../actions/notes\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const [cheking, setcheking] = useState(true);\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // retornar un observable que es un tipo de objeto especial\n    // que se puede disparar mas de una vez\n    // si la autenticacion se ejecuta o cambia\n    // el callback siempre se va a ejecutar\n    // el observable se queda escuchando siempre el cambio\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setisLoggedIn(true);\n        dispatch(startLoadingNotes(user.uid));\n      } else {\n        setisLoggedIn(false);\n      }\n\n      setcheking(false);\n    });\n  }, [dispatch, setcheking, setisLoggedIn]);\n\n  if (cheking) {\n    return <h1>Wait...</h1>;\n    // colocar la pagina de espera o un loading\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            isAuthenticated={isLoggedIn}\n            path=\"/auth\"\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/journal\"\n            component={JournalScreen}\n          />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\r\n\r\n/**\r\n {\r\n     notes:[],\r\n     active: null ó { note }\r\n }\r\n */\r\nconst initialState = {\r\n  notes: [],\r\n  active: null,\r\n};\r\n//reducer funcion pura\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActiveEntry:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n      case types.notesLoadEntrys:\r\n        return {\r\n          ...state,\r\n          notes: [...action.payload],\r\n        };\r\n      case types.notesUpdateEntry:\r\n        return{\r\n          ...state,\r\n          active: null,\r\n          notes:[]\r\n        }\r\n      case types.notesLogoutCleaning:\r\n        return{\r\n\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  loading: false,\n  messageError: \"\",\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        messageError: action.payload,\n      };\n    case types.uiRemoveError:\n      return {\n        ...state,\n        messageError: null,\n      };\n\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case types.uiFinishLoading:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport { authReducer } from \"../reducers/authReducer\";\nimport { notesReducer } from \"../reducers/notesReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\n//combina reducers de varias funcionalidades que necesites\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer\n});\n// solo recibe un solo reducer\n// adiciona los middleware\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(ReduxThunk))\n);\n","import { types } from \"../types/types\";\n\n/*\n    {\n        uid: 'asd546asd'\n        name: 'Maria'\n    }\n*/\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n    case types.logout:\n      return {};\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}